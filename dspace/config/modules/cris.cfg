### CRIS Module
enabled = true
mydspace.enabled = true

#navbar.cris-entities = researcherprofiles,orgunits,fundings
navbar.cris-entities = 

#Set true if only admin can change the status
rp.changestatus.admin = true
## Status of a new manually created researcher profile
## Set this to true, if you want the newly created profile to be public by default
rp.profile.new.status = true

applicationServiceCache.enabled = true
applicationServiceCache.max-in-memory-objects = 1000
applicationServiceCache.overflow-to-disk = false
applicationServiceCache.time-to-live = 0
applicationServiceCache.time-to-idle = 0
applicationServiceCache.disk-expire-thread-interval = 600 


## rp metastructural field - fullName, preferredName, translatedName, email, variants
researcherpage.pdef.publicimage = personalpicture
researcherpage.pdef.orgunit = dept
researcherpage.pdef.orcid = orcid

## project metastructural field - title
## ou metastructural field - name


### Authority configuration ###
researcherpage.browseindex = author

### Import/Export configuration 
file.import.path = ${dspace.dir}/cris-import/
researcherpage.file.import.rpdefaultstatus = true

### Researcher page file service configuration ####
researcherpage.file.path = ${dspace.dir}/rp-files
project.file.path = ${dspace.dir}/rg-files
organizationunit.file.path = ${dspace.dir}/ou-files
otherresearchobject.file.path = ${dspace.dir}/do-files
researcherpage.jdynafile.servlet.name = cris/rp/fileservice
project.jdynafile.servlet.name = cris/project/fileservice
organizationunit.jdynafile.servlet.name = cris/ou/fileservice
otherresearchobject.jdynafile.servlet.name = cris/do/fileservice
researcherpage.administration.table.pagesize = 50
project.administration.table.pagesize = 50
organizationunit.administration.table.pagesize = 50
otherresearchobject.administration.table.pagesize = 50
#Used for thumbnail in discovery
researcherpage.thumbnail.picture = picture
project.thumbnail.picture = picture
organizationunit.thumbnail.picture = picture
#e.g. for Research Object use the authority prefix
#otherresearchobject.journals.thumbnail.picture = journalspicture 

### PUBMED ###
pmc.enabled = true
pmc.server = ${solr.server}/pmc

### WS Web Services Configuration ###
## Please if you change here don't forget to report this changes onto crisrequest.xsd	
webservices.xsd.path = ${dspace.dir}/ws-xsd/

### SOLR TYPE FACET - NOTICE separator \n|||\n depend by discovery configuration, used also to identify Software Entity Type ###
facet.type.item = 001publications\n|||\nPublications###publications
facet.type.thesis = 005theses\n|||\nTheses###theses
facet.type.patents = 004patents\n|||\nPatents###patents
facet.type.dataset = 003dataset\n|||\nDatasets###datasets
facet.type.conferenceproceeding = 002conferencematerials\n|||\nConference Materials###conferencematerials
facet.type.conferencepaper = 002conferencematerials\n|||\nConference Materials###conferencematerials
facet.type.presentation = 002conferencematerials\n|||\nConference Materials###conferencematerials
facet.type.poster = 002conferencematerials\n|||\nConference Materials###conferencematerials
facet.type.community = 007communities\n|||\nCommunities###community
facet.type.collection = 006collections\n|||\nCollections###collection
facet.type.crisrp = 009researchers\n|||\nResearcher profiles###researcherprofiles
facet.type.crispj = 010projects\n|||\nFundings###fundings
facet.type.crisou = 008orgunits\n|||\nOrganizations###orgunits
facet.type.nested = nobjects\n|||\nN-Object###default
##You can define a clustered type for other research object or set a fine granularity configuration custom - use @label@ to use default behaviours (<typedefinitionlabellowercase>|||<typedefinitionlabel>)
facet.type.crisdo.default = others\n|||\nOthers###crisothers
#facet.type.crisdo.crisprize = prize\n|||\nHonours, Awards and Prizen###crisprize
#facet.type.crisdo.crisqualification = @label@
facet.type.crisdo.crisjournals = @label@
facet.type.crisdo.crisevents = @label@

### Setting for Software Entity Types, system administrator will be able to define categories that do not need to match exactly with the Software Entity Types, i.e. it is possible to consider separate entities different publication types (thesis, patents, etc.)
### Following configuration show which metadata read to typing (if item don't contains metadata the default beahaviour is 'item')
global.item.typing = dc.type

### Base domain name to build temporary link to external authority service
#external.domainname.authority.service.orcid = https://sandbox.orcid.org/
external.domainname.authority.service.orcid = https://orcid.org/

### Resolvers for different Identifier types
external.uri.resolver.doi = https://doi.org/
external.uri.resolver.handle = https://hdl.handle.net/
external.uri.resolver.urn = https://nbn-resolving.de/

### allow to create new cris objects on the fly from the admin UI (default false)
widgetpointer.crisrp.create-new = true
widgetpointer.crisrp.active = true
widgetpointer.crispj.create-new = true
widgetpointer.crispj.active = true
widgetpointer.crisou.create-new = true
widgetpointer.crisou.active = true
widgetpointer.crisjournals.create-new = true
widgetpointer.crisjournals.active = true

### If true all the value filled in this metadata at end of the submission process (or in batch import) will be generated in the authority database due to the consumer CrisConsumer
import.submission = true
# it is possible to turn off / enable specific metadata as follow
#import.submission.dc.relation.ispartof = true

### True to activate the new object created during the submission process
import.submission.enabled.entity = true
# it is possible to turn off / enable specific metadata as follow
#import.submission.enabled.entity.dc.relation.ispartof = true

### True to send email to invite into ORCID
system.script.pushtoorcid.profile.invitation.email = false
### True to force the send also if the preference of the Researcher is manual send mode to the orcid registry (used only by the script in ADMIN MODE)
system.script.pushtoorcid.force = false
### if defined overwrite the researchers preferences with this (used only by the script in ADMIN MODE)
#system.script.pushtoorcid.default.preference = 1
### if true send into works identifier the internal database id
system.script.pushtoorcid.works.local.identifier.force = false
### if true force to send the profile metadata (used only by the script in ADMIN MODE)
#system.script.pushtoorcid.profile.preference.force = false

### METRICS ###
##SCOPUS##
ametrics.elsevier.scopus.enabled = ${cris.ametrics.elsevier.scopus.enabled}
ametrics.elsevier.scopus.endpoint = ${cris.ametrics.elsevier.scopus.endpoint}
ametrics.elsevier.scopus.apikey = ${cris.ametrics.elsevier.scopus.apikey}
##
##WOS##
ametrics.thomsonreuters.wos.enabled = ${cris.ametrics.thomsonreuters.wos.enabled}
ametrics.thomsonreuters.wos.endpoint = ${cris.ametrics.thomsonreuters.wos.endpoint}
##
##GOOGLE SCHOLAR##
ametrics.google.scholar.enabled = ${cris.ametrics.google.scholar.enabled}
##
##ALTMETRIC##
ametrics.altmetric.enabled = ${cris.ametrics.altmetric.enabled}

## the following settings are used to retrieve item on solr search engine
ametrics.identifier.pmid = dc.identifier.pmid
#scopus id
ametrics.identifier.eid = dc.identifier.scopus
ametrics.identifier.doi = dc.identifier.doi
ametrics.identifier.isbn = dc.identifier.isbn
#wos id
ametrics.identifier.ut = dc.identifier.isi
###

researcher.cris.rp.ref.display.strategy.metadata.icon = staffStatus

file.import.defaultstatus.org.dspace.app.cris.model.ResearcherPage = true
file.import.defaultstatus.org.dspace.app.cris.model.OrganizationUnit = true
file.import.defaultstatus.org.dspace.app.cris.model.Project = true

rp.claim.enabled = true
rp.claim.group.name = self-claim-rp
publication.claim.group.name = self-claim-publication
notify-publication.claim.group.name = notify-self-claim-publication
#Filter query for Rebind Publication and List of possible match
#retrievepotentialmatch.filter.bycommunity = 123456789/1
#retrievepotentialmatch.filter.bycollection = 123456789/3
# True if you want force commit on solr during claim on Find Publication/Claim Publication section (default: false)
#publication.claim.list.solr.force.commit = true
# Double value to setup similarity measure for short strings in the Find Publication/Claim Publication section (see Jaro-Winkler distance algorithm - org.apache.lucene.search.spell.JaroWinklerDistance)
publication.claim.list.checksimilarity = 0.9

# crisrp.admin = <Name of the Group of RP Administrators>
# crispj.admin = ...
# crisou.admin = ...
# crisjournal.admin = ...

crisou.owner = director
crispj.owner = principalinvestigator,project_editor
# crisjournal.owner = ...

grobid.service.endpoint = ${cris.grobid.service.endpoint}

zdb.search.url = ${cris.zdb.search.url}
zdb.detail.url = ${cris.zdb.detail.url}

system.script.subscribe.binditemtorp = ${cris.system.script.subscribe.binditemtorp}
system.store.private.field = ${cris.system.store.private.field}

webui.tab.show.count.for.firstcomponent = false

# column configuration for queue imp_record page
webui.recordlist.columns = dc.date.issued,dc.title,dc.contributor.author

# Relation Helper Configuration
# This helper can set reciprocal relations between records on this repository
# Prefixes to check
relationsetter.identifier.prefixes = doi,urn,hdl
# Index fields to check
relationsetter.indexfields = dc.identifier.doi;handle;dc.identifier.urn.-
# Reciprocal field definitions are taken from dspace.cfg option ItemAuthority.reciprocalMetadata.<fieldName>
# Local target field schema - the target fields are <relationsetter.localschema>.relation.<relationField>
relationsetter.localschema = local
# source field schema
relationsetter.sourceschema = datacite
